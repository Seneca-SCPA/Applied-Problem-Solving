"use strict";(self.webpackChunkApplied_Problem_Solving=self.webpackChunkApplied_Problem_Solving||[]).push([[51],{3583:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"glossary","title":"Glossary","description":"Glossary of key terms and definitions","source":"@site/docs/glossary.md","sourceDirName":".","slug":"/glossary","permalink":"/Applied-Problem-Solving/glossary","draft":false,"unlisted":false,"editUrl":"https://github.com/Seneca-SCPA/Applied-Problem-Solving/tree/main/docs/glossary.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"id":"glossary","title":"Glossary","sidebar_position":10,"description":"Glossary of key terms and definitions"},"sidebar":"courseNotesSidebar","previous":{"title":"Data Structures","permalink":"/Applied-Problem-Solving/data-structures"}}');var i=n(4848),o=n(8453);const r={id:"glossary",title:"Glossary",sidebar_position:10,description:"Glossary of key terms and definitions"},d="Glossary of Key Terms",a={},l=[];function c(e){const t={code:"code",dd:"dd",dl:"dl",dt:"dt",h1:"h1",header:"header",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"glossary-of-key-terms",children:"Glossary of Key Terms"})}),"\n",(0,i.jsxs)(t.dl,{children:[(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Collection"})}),(0,i.jsx)(t.dd,{children:"Collections are composites of other objects that include data and have logical functionality to support the containers operations."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Construct"})}),(0,i.jsx)(t.dd,{children:"A logical control such as a selection or iteration."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Container"})}),(0,i.jsx)(t.dd,{children:"Containers are very data specific in the simplest forms such as an array and do not inherently have a lot of logical functionality."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Enumeration"})}),(0,i.jsx)(t.dd,{children:"Sequencing steps with an identifier such as a number (ex: 1. 2. 3. ...) or letter (ex: A. B. C. ...)."}),(0,i.jsx)(t.dd,{children:"Used primarily in pseudo code to identify the execution sequence of statements."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Indentation"})}),(0,i.jsxs)(t.dd,{children:["A fixed number of blank spaces to the right (ex: using the ",(0,i.jsx)(t.code,{children:"TAB"})," key) used for aligning grouped logic that is nested."]}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Iteration"})}),(0,i.jsx)(t.dd,{children:"A construct that enables looping in a program - the ability to repeat a statement(s) easily."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Jump Statements"})}),(0,i.jsx)(t.dd,{children:"A poor logic flow that directs the next step of execution be an arbitrary location outside of the immediate vicinity of the current statement (ex: go to step #152). Instead, logic should be controlled using logical constructs such as selection and iteration."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Modularity"})}),(0,i.jsx)(t.dd,{children:"A term used for breaking down logic into various degrees of detail. This can be at a directory-level, file-level, function-level, or statement-level."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Nest"})}),(0,i.jsx)(t.dd,{children:"Content (statement(s), selection, or iteration) residing within a preceding construct such as a selection or iteration."}),(0,i.jsx)(t.dd,{children:"The nested content would be dependant on a preceding construct and in the case of pseudo code would be indented under it."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Obfuscate"})}),(0,i.jsx)(t.dd,{children:"To purposely confuse and misdirect meaning usually by way of applying meaningless names to variables and functions."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Selection"})}),(0,i.jsx)(t.dd,{children:"A construct that enables decisions in a program to adapt to changing conditions and execute different logic flows."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Semantic"})}),(0,i.jsx)(t.dd,{children:"Is another word for logic. It is the logical definition and meaning of an algorithm."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Statement"})}),(0,i.jsx)(t.dd,{children:"A single line of instruction (step) such as a calculation, action to display or receive user input."}),(0,i.jsx)(t.dt,{children:(0,i.jsx)(t.strong,{children:"Variable"})}),(0,i.jsx)(t.dd,{children:"A named placeholder used to reference a value. These are used for storing data for later use and evaluation."})]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var s=n(6540);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);